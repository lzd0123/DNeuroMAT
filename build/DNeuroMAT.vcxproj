<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="16.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x86</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{6DDDF20F-9F37-3FFE-95B5-8AC228E4073D}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.19041.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>DNeuroMAT</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\vaa3d_plug\DNeuroMAT\build\Debug\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">DNeuroMAT.dir\Debug\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">DNeuroMAT</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.dll</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\Neure\v3d_external\bin\plugins\DNeuroMAT\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">DNeuroMAT.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">DNeuroMAT</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.dll</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\vaa3d_plug\DNeuroMAT\build\MinSizeRel\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">DNeuroMAT.dir\MinSizeRel\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">DNeuroMAT</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">.dll</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\vaa3d_plug\DNeuroMAT\build\RelWithDebInfo\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">DNeuroMAT.dir\RelWithDebInfo\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">DNeuroMAT</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">.dll</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</GenerateManifest>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>E:\vaa3d_plug\DNeuroMAT\build\DNeuroMAT_autogen\include_Debug;E:\vaa3d_plug\DNeuroMAT\src\cpp;E:\Neure\4.8.6\include\..\tools\shared\qtpropertybrowser;E:\Neure\v3d_external\v3d_main\basic_c_fun;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /external:I "E:/Neure/4.8.6/include" /external:I "E:/Neure/4.8.6/include/QtCore" /external:I "E:/Neure/4.8.6/mkspecs/default" /external:I "E:/Neure/4.8.6/include/QtGui"</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <ExternalWarningLevel>TurnOffAllWarnings</ExternalWarningLevel>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <UseFullPaths>false</UseFullPaths>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;QT_CORE_LIB;QT_GUI_LIB;CMAKE_INTDIR="Debug";DNeuroMAT_EXPORTS</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_DEBUG;_WINDOWS;QT_CORE_LIB;QT_GUI_LIB;CMAKE_INTDIR=\"Debug\";DNeuroMAT_EXPORTS</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>E:\vaa3d_plug\DNeuroMAT\build\DNeuroMAT_autogen\include_Debug;E:\vaa3d_plug\DNeuroMAT\src\cpp;E:\Neure\4.8.6\include\..\tools\shared\qtpropertybrowser;E:\Neure\v3d_external\v3d_main\basic_c_fun;E:\Neure\4.8.6\include;E:\Neure\4.8.6\include\QtCore;E:\Neure\4.8.6\mkspecs\default;E:\Neure\4.8.6\include\QtGui;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>E:\vaa3d_plug\DNeuroMAT\build\DNeuroMAT_autogen\include_Debug;E:\vaa3d_plug\DNeuroMAT\src\cpp;E:\Neure\4.8.6\include\..\tools\shared\qtpropertybrowser;E:\Neure\v3d_external\v3d_main\basic_c_fun;E:\Neure\4.8.6\include;E:\Neure\4.8.6\include\QtCore;E:\Neure\4.8.6\mkspecs\default;E:\Neure\4.8.6\include\QtGui;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PreBuildEvent>
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message>Automatic MOC and UIC for target DNeuroMAT</Message>
      <Command>setlocal
cd E:\vaa3d_plug\DNeuroMAT\build
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\cmake-3.24.0-rc2-windows-x86_64\bin\cmake.exe -E cmake_autogen E:/vaa3d_plug/DNeuroMAT/build/CMakeFiles/DNeuroMAT_autogen.dir/AutogenInfo.json Debug
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PreBuildEvent>
    <Link>
      <AdditionalDependencies>E:\Neure\4.8.6\lib\QtCored4.lib;E:\Neure\4.8.6\lib\QtGuid4.lib;E:\Neure\4.8.6\lib\QtCored4.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>E:/vaa3d_plug/DNeuroMAT/build/Debug/DNeuroMAT.lib</ImportLibrary>
      <ProgramDataBaseFile>E:/vaa3d_plug/DNeuroMAT/build/Debug/DNeuroMAT.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>E:\vaa3d_plug\DNeuroMAT\build\DNeuroMAT_autogen\include_Release;E:\vaa3d_plug\DNeuroMAT\src\cpp;E:\Neure\4.8.6\include\..\tools\shared\qtpropertybrowser;E:\Neure\v3d_external\v3d_main\basic_c_fun;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /external:I "E:/Neure/4.8.6/include" /external:I "E:/Neure/4.8.6/include/QtCore" /external:I "E:/Neure/4.8.6/mkspecs/default" /external:I "E:/Neure/4.8.6/include/QtGui"</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <ExceptionHandling>Sync</ExceptionHandling>
      <ExternalWarningLevel>TurnOffAllWarnings</ExternalWarningLevel>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <UseFullPaths>false</UseFullPaths>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;QT_CORE_LIB;QT_NO_DEBUG;QT_GUI_LIB;CMAKE_INTDIR="Release";DNeuroMAT_EXPORTS</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;QT_CORE_LIB;QT_NO_DEBUG;QT_GUI_LIB;CMAKE_INTDIR=\"Release\";DNeuroMAT_EXPORTS</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>E:\vaa3d_plug\DNeuroMAT\build\DNeuroMAT_autogen\include_Release;E:\vaa3d_plug\DNeuroMAT\src\cpp;E:\Neure\4.8.6\include\..\tools\shared\qtpropertybrowser;E:\Neure\v3d_external\v3d_main\basic_c_fun;E:\Neure\4.8.6\include;E:\Neure\4.8.6\include\QtCore;E:\Neure\4.8.6\mkspecs\default;E:\Neure\4.8.6\include\QtGui;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>E:\vaa3d_plug\DNeuroMAT\build\DNeuroMAT_autogen\include_Release;E:\vaa3d_plug\DNeuroMAT\src\cpp;E:\Neure\4.8.6\include\..\tools\shared\qtpropertybrowser;E:\Neure\v3d_external\v3d_main\basic_c_fun;E:\Neure\4.8.6\include;E:\Neure\4.8.6\include\QtCore;E:\Neure\4.8.6\mkspecs\default;E:\Neure\4.8.6\include\QtGui;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PreBuildEvent>
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message>Automatic MOC and UIC for target DNeuroMAT</Message>
      <Command>setlocal
cd E:\vaa3d_plug\DNeuroMAT\build
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\cmake-3.24.0-rc2-windows-x86_64\bin\cmake.exe -E cmake_autogen E:/vaa3d_plug/DNeuroMAT/build/CMakeFiles/DNeuroMAT_autogen.dir/AutogenInfo.json Release
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PreBuildEvent>
    <Link>
      <AdditionalDependencies>E:\Neure\4.8.6\lib\QtCore4.lib;E:\Neure\4.8.6\lib\QtGui4.lib;E:\Neure\4.8.6\lib\QtCore4.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>E:/vaa3d_plug/DNeuroMAT/build/Release/DNeuroMAT.lib</ImportLibrary>
      <ProgramDataBaseFile>E:/Neure/v3d_external/bin/plugins/DNeuroMAT/DNeuroMAT.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>E:\vaa3d_plug\DNeuroMAT\build\DNeuroMAT_autogen\include_MinSizeRel;E:\vaa3d_plug\DNeuroMAT\src\cpp;E:\Neure\4.8.6\include\..\tools\shared\qtpropertybrowser;E:\Neure\v3d_external\v3d_main\basic_c_fun;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /external:I "E:/Neure/4.8.6/include" /external:I "E:/Neure/4.8.6/include/QtCore" /external:I "E:/Neure/4.8.6/mkspecs/default" /external:I "E:/Neure/4.8.6/include/QtGui"</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <ExceptionHandling>Sync</ExceptionHandling>
      <ExternalWarningLevel>TurnOffAllWarnings</ExternalWarningLevel>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <UseFullPaths>false</UseFullPaths>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;QT_CORE_LIB;QT_NO_DEBUG;QT_GUI_LIB;CMAKE_INTDIR="MinSizeRel";DNeuroMAT_EXPORTS</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;QT_CORE_LIB;QT_NO_DEBUG;QT_GUI_LIB;CMAKE_INTDIR=\"MinSizeRel\";DNeuroMAT_EXPORTS</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>E:\vaa3d_plug\DNeuroMAT\build\DNeuroMAT_autogen\include_MinSizeRel;E:\vaa3d_plug\DNeuroMAT\src\cpp;E:\Neure\4.8.6\include\..\tools\shared\qtpropertybrowser;E:\Neure\v3d_external\v3d_main\basic_c_fun;E:\Neure\4.8.6\include;E:\Neure\4.8.6\include\QtCore;E:\Neure\4.8.6\mkspecs\default;E:\Neure\4.8.6\include\QtGui;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>E:\vaa3d_plug\DNeuroMAT\build\DNeuroMAT_autogen\include_MinSizeRel;E:\vaa3d_plug\DNeuroMAT\src\cpp;E:\Neure\4.8.6\include\..\tools\shared\qtpropertybrowser;E:\Neure\v3d_external\v3d_main\basic_c_fun;E:\Neure\4.8.6\include;E:\Neure\4.8.6\include\QtCore;E:\Neure\4.8.6\mkspecs\default;E:\Neure\4.8.6\include\QtGui;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PreBuildEvent>
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message>Automatic MOC and UIC for target DNeuroMAT</Message>
      <Command>setlocal
cd E:\vaa3d_plug\DNeuroMAT\build
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\cmake-3.24.0-rc2-windows-x86_64\bin\cmake.exe -E cmake_autogen E:/vaa3d_plug/DNeuroMAT/build/CMakeFiles/DNeuroMAT_autogen.dir/AutogenInfo.json MinSizeRel
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PreBuildEvent>
    <Link>
      <AdditionalDependencies>E:\Neure\4.8.6\lib\QtCore4.lib;E:\Neure\4.8.6\lib\QtGui4.lib;E:\Neure\4.8.6\lib\QtCore4.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>E:/vaa3d_plug/DNeuroMAT/build/MinSizeRel/DNeuroMAT.lib</ImportLibrary>
      <ProgramDataBaseFile>E:/vaa3d_plug/DNeuroMAT/build/MinSizeRel/DNeuroMAT.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>E:\vaa3d_plug\DNeuroMAT\build\DNeuroMAT_autogen\include_RelWithDebInfo;E:\vaa3d_plug\DNeuroMAT\src\cpp;E:\Neure\4.8.6\include\..\tools\shared\qtpropertybrowser;E:\Neure\v3d_external\v3d_main\basic_c_fun;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /external:I "E:/Neure/4.8.6/include" /external:I "E:/Neure/4.8.6/include/QtCore" /external:I "E:/Neure/4.8.6/mkspecs/default" /external:I "E:/Neure/4.8.6/include/QtGui"</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <ExternalWarningLevel>TurnOffAllWarnings</ExternalWarningLevel>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <UseFullPaths>false</UseFullPaths>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;QT_CORE_LIB;QT_NO_DEBUG;QT_GUI_LIB;CMAKE_INTDIR="RelWithDebInfo";DNeuroMAT_EXPORTS</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;QT_CORE_LIB;QT_NO_DEBUG;QT_GUI_LIB;CMAKE_INTDIR=\"RelWithDebInfo\";DNeuroMAT_EXPORTS</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>E:\vaa3d_plug\DNeuroMAT\build\DNeuroMAT_autogen\include_RelWithDebInfo;E:\vaa3d_plug\DNeuroMAT\src\cpp;E:\Neure\4.8.6\include\..\tools\shared\qtpropertybrowser;E:\Neure\v3d_external\v3d_main\basic_c_fun;E:\Neure\4.8.6\include;E:\Neure\4.8.6\include\QtCore;E:\Neure\4.8.6\mkspecs\default;E:\Neure\4.8.6\include\QtGui;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>E:\vaa3d_plug\DNeuroMAT\build\DNeuroMAT_autogen\include_RelWithDebInfo;E:\vaa3d_plug\DNeuroMAT\src\cpp;E:\Neure\4.8.6\include\..\tools\shared\qtpropertybrowser;E:\Neure\v3d_external\v3d_main\basic_c_fun;E:\Neure\4.8.6\include;E:\Neure\4.8.6\include\QtCore;E:\Neure\4.8.6\mkspecs\default;E:\Neure\4.8.6\include\QtGui;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PreBuildEvent>
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message>Automatic MOC and UIC for target DNeuroMAT</Message>
      <Command>setlocal
cd E:\vaa3d_plug\DNeuroMAT\build
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\cmake-3.24.0-rc2-windows-x86_64\bin\cmake.exe -E cmake_autogen E:/vaa3d_plug/DNeuroMAT/build/CMakeFiles/DNeuroMAT_autogen.dir/AutogenInfo.json RelWithDebInfo
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PreBuildEvent>
    <Link>
      <AdditionalDependencies>E:\Neure\4.8.6\lib\QtCore4.lib;E:\Neure\4.8.6\lib\QtGui4.lib;E:\Neure\4.8.6\lib\QtCore4.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>E:/vaa3d_plug/DNeuroMAT/build/RelWithDebInfo/DNeuroMAT.lib</ImportLibrary>
      <ProgramDataBaseFile>E:/vaa3d_plug/DNeuroMAT/build/RelWithDebInfo/DNeuroMAT.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="E:\vaa3d_plug\DNeuroMAT\build\CMakeFiles\e2a57e90271debd9fc3d2426c0c8961e\qrc_dialog.cpp.rule">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Automatic RCC for dialog.qrc</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd E:\vaa3d_plug\DNeuroMAT\build
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\cmake-3.24.0-rc2-windows-x86_64\bin\cmake.exe -E cmake_autorcc E:/vaa3d_plug/DNeuroMAT/build/CMakeFiles/DNeuroMAT_autogen.dir/AutoRcc_dialog_EWIEGA46WW_Info.json Debug
if %errorlevel% neq 0 goto :cmEnd
D:\cmake-3.24.0-rc2-windows-x86_64\bin\cmake.exe -E cmake_autorcc E:/vaa3d_plug/DNeuroMAT/build/CMakeFiles/DNeuroMAT_autogen.dir/AutoRcc_dialog_EWIEGA46WW_Info.json Release
if %errorlevel% neq 0 goto :cmEnd
D:\cmake-3.24.0-rc2-windows-x86_64\bin\cmake.exe -E cmake_autorcc E:/vaa3d_plug/DNeuroMAT/build/CMakeFiles/DNeuroMAT_autogen.dir/AutoRcc_dialog_EWIEGA46WW_Info.json MinSizeRel
if %errorlevel% neq 0 goto :cmEnd
D:\cmake-3.24.0-rc2-windows-x86_64\bin\cmake.exe -E cmake_autorcc E:/vaa3d_plug/DNeuroMAT/build/CMakeFiles/DNeuroMAT_autogen.dir/AutoRcc_dialog_EWIEGA46WW_Info.json RelWithDebInfo
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\vaa3d_plug\DNeuroMAT\dialog.qrc;E:\vaa3d_plug\DNeuroMAT\build\CMakeFiles\DNeuroMAT_autogen.dir\AutoRcc_dialog_EWIEGA46WW_Info.json;E:\vaa3d_plug\DNeuroMAT\src\pics\blueStone.png;E:\vaa3d_plug\DNeuroMAT\src\pics\close.png;E:\vaa3d_plug\DNeuroMAT\src\pics\close-white.png;E:\vaa3d_plug\DNeuroMAT\src\pics\grayStone.png;E:\vaa3d_plug\DNeuroMAT\src\pics\greenStone.png;E:\vaa3d_plug\DNeuroMAT\src\pics\redStone.png;E:\vaa3d_plug\DNeuroMAT\src\pics\down.png;E:\vaa3d_plug\DNeuroMAT\src\pics\minus.png;E:\vaa3d_plug\DNeuroMAT\src\pics\plus.png;E:\vaa3d_plug\DNeuroMAT\src\pics\up.png;E:\vaa3d_plug\DNeuroMAT\src\pics\down-128.png;E:\vaa3d_plug\DNeuroMAT\src\pics\file-128.png;E:\vaa3d_plug\DNeuroMAT\src\pics\standardbutton-apply-128.png;E:\vaa3d_plug\DNeuroMAT\src\pics\standardbutton-cancel-128.png;E:\vaa3d_plug\DNeuroMAT\src\pics\standardbutton-open-128.png;E:\vaa3d_plug\DNeuroMAT\src\pics\up-128.png;E:\vaa3d_plug\DNeuroMAT\src\pics\v3dIcon128.png;E:\vaa3d_plug\DNeuroMAT\src\pics\edit.png;E:\Neure\4.8.6\bin\rcc.exe;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\vaa3d_plug\DNeuroMAT\build\DNeuroMAT_autogen\EWIEGA46WW\qrc_dialog.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Automatic RCC for dialog.qrc</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd E:\vaa3d_plug\DNeuroMAT\build
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\cmake-3.24.0-rc2-windows-x86_64\bin\cmake.exe -E cmake_autorcc E:/vaa3d_plug/DNeuroMAT/build/CMakeFiles/DNeuroMAT_autogen.dir/AutoRcc_dialog_EWIEGA46WW_Info.json Debug
if %errorlevel% neq 0 goto :cmEnd
D:\cmake-3.24.0-rc2-windows-x86_64\bin\cmake.exe -E cmake_autorcc E:/vaa3d_plug/DNeuroMAT/build/CMakeFiles/DNeuroMAT_autogen.dir/AutoRcc_dialog_EWIEGA46WW_Info.json Release
if %errorlevel% neq 0 goto :cmEnd
D:\cmake-3.24.0-rc2-windows-x86_64\bin\cmake.exe -E cmake_autorcc E:/vaa3d_plug/DNeuroMAT/build/CMakeFiles/DNeuroMAT_autogen.dir/AutoRcc_dialog_EWIEGA46WW_Info.json MinSizeRel
if %errorlevel% neq 0 goto :cmEnd
D:\cmake-3.24.0-rc2-windows-x86_64\bin\cmake.exe -E cmake_autorcc E:/vaa3d_plug/DNeuroMAT/build/CMakeFiles/DNeuroMAT_autogen.dir/AutoRcc_dialog_EWIEGA46WW_Info.json RelWithDebInfo
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\vaa3d_plug\DNeuroMAT\dialog.qrc;E:\vaa3d_plug\DNeuroMAT\build\CMakeFiles\DNeuroMAT_autogen.dir\AutoRcc_dialog_EWIEGA46WW_Info.json;E:\vaa3d_plug\DNeuroMAT\src\pics\blueStone.png;E:\vaa3d_plug\DNeuroMAT\src\pics\close.png;E:\vaa3d_plug\DNeuroMAT\src\pics\close-white.png;E:\vaa3d_plug\DNeuroMAT\src\pics\grayStone.png;E:\vaa3d_plug\DNeuroMAT\src\pics\greenStone.png;E:\vaa3d_plug\DNeuroMAT\src\pics\redStone.png;E:\vaa3d_plug\DNeuroMAT\src\pics\down.png;E:\vaa3d_plug\DNeuroMAT\src\pics\minus.png;E:\vaa3d_plug\DNeuroMAT\src\pics\plus.png;E:\vaa3d_plug\DNeuroMAT\src\pics\up.png;E:\vaa3d_plug\DNeuroMAT\src\pics\down-128.png;E:\vaa3d_plug\DNeuroMAT\src\pics\file-128.png;E:\vaa3d_plug\DNeuroMAT\src\pics\standardbutton-apply-128.png;E:\vaa3d_plug\DNeuroMAT\src\pics\standardbutton-cancel-128.png;E:\vaa3d_plug\DNeuroMAT\src\pics\standardbutton-open-128.png;E:\vaa3d_plug\DNeuroMAT\src\pics\up-128.png;E:\vaa3d_plug\DNeuroMAT\src\pics\v3dIcon128.png;E:\vaa3d_plug\DNeuroMAT\src\pics\edit.png;E:\Neure\4.8.6\bin\rcc.exe;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\vaa3d_plug\DNeuroMAT\build\DNeuroMAT_autogen\EWIEGA46WW\qrc_dialog.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Automatic RCC for dialog.qrc</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd E:\vaa3d_plug\DNeuroMAT\build
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\cmake-3.24.0-rc2-windows-x86_64\bin\cmake.exe -E cmake_autorcc E:/vaa3d_plug/DNeuroMAT/build/CMakeFiles/DNeuroMAT_autogen.dir/AutoRcc_dialog_EWIEGA46WW_Info.json Debug
if %errorlevel% neq 0 goto :cmEnd
D:\cmake-3.24.0-rc2-windows-x86_64\bin\cmake.exe -E cmake_autorcc E:/vaa3d_plug/DNeuroMAT/build/CMakeFiles/DNeuroMAT_autogen.dir/AutoRcc_dialog_EWIEGA46WW_Info.json Release
if %errorlevel% neq 0 goto :cmEnd
D:\cmake-3.24.0-rc2-windows-x86_64\bin\cmake.exe -E cmake_autorcc E:/vaa3d_plug/DNeuroMAT/build/CMakeFiles/DNeuroMAT_autogen.dir/AutoRcc_dialog_EWIEGA46WW_Info.json MinSizeRel
if %errorlevel% neq 0 goto :cmEnd
D:\cmake-3.24.0-rc2-windows-x86_64\bin\cmake.exe -E cmake_autorcc E:/vaa3d_plug/DNeuroMAT/build/CMakeFiles/DNeuroMAT_autogen.dir/AutoRcc_dialog_EWIEGA46WW_Info.json RelWithDebInfo
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\vaa3d_plug\DNeuroMAT\dialog.qrc;E:\vaa3d_plug\DNeuroMAT\build\CMakeFiles\DNeuroMAT_autogen.dir\AutoRcc_dialog_EWIEGA46WW_Info.json;E:\vaa3d_plug\DNeuroMAT\src\pics\blueStone.png;E:\vaa3d_plug\DNeuroMAT\src\pics\close.png;E:\vaa3d_plug\DNeuroMAT\src\pics\close-white.png;E:\vaa3d_plug\DNeuroMAT\src\pics\grayStone.png;E:\vaa3d_plug\DNeuroMAT\src\pics\greenStone.png;E:\vaa3d_plug\DNeuroMAT\src\pics\redStone.png;E:\vaa3d_plug\DNeuroMAT\src\pics\down.png;E:\vaa3d_plug\DNeuroMAT\src\pics\minus.png;E:\vaa3d_plug\DNeuroMAT\src\pics\plus.png;E:\vaa3d_plug\DNeuroMAT\src\pics\up.png;E:\vaa3d_plug\DNeuroMAT\src\pics\down-128.png;E:\vaa3d_plug\DNeuroMAT\src\pics\file-128.png;E:\vaa3d_plug\DNeuroMAT\src\pics\standardbutton-apply-128.png;E:\vaa3d_plug\DNeuroMAT\src\pics\standardbutton-cancel-128.png;E:\vaa3d_plug\DNeuroMAT\src\pics\standardbutton-open-128.png;E:\vaa3d_plug\DNeuroMAT\src\pics\up-128.png;E:\vaa3d_plug\DNeuroMAT\src\pics\v3dIcon128.png;E:\vaa3d_plug\DNeuroMAT\src\pics\edit.png;E:\Neure\4.8.6\bin\rcc.exe;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\vaa3d_plug\DNeuroMAT\build\DNeuroMAT_autogen\EWIEGA46WW\qrc_dialog.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Automatic RCC for dialog.qrc</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd E:\vaa3d_plug\DNeuroMAT\build
if %errorlevel% neq 0 goto :cmEnd
E:
if %errorlevel% neq 0 goto :cmEnd
D:\cmake-3.24.0-rc2-windows-x86_64\bin\cmake.exe -E cmake_autorcc E:/vaa3d_plug/DNeuroMAT/build/CMakeFiles/DNeuroMAT_autogen.dir/AutoRcc_dialog_EWIEGA46WW_Info.json Debug
if %errorlevel% neq 0 goto :cmEnd
D:\cmake-3.24.0-rc2-windows-x86_64\bin\cmake.exe -E cmake_autorcc E:/vaa3d_plug/DNeuroMAT/build/CMakeFiles/DNeuroMAT_autogen.dir/AutoRcc_dialog_EWIEGA46WW_Info.json Release
if %errorlevel% neq 0 goto :cmEnd
D:\cmake-3.24.0-rc2-windows-x86_64\bin\cmake.exe -E cmake_autorcc E:/vaa3d_plug/DNeuroMAT/build/CMakeFiles/DNeuroMAT_autogen.dir/AutoRcc_dialog_EWIEGA46WW_Info.json MinSizeRel
if %errorlevel% neq 0 goto :cmEnd
D:\cmake-3.24.0-rc2-windows-x86_64\bin\cmake.exe -E cmake_autorcc E:/vaa3d_plug/DNeuroMAT/build/CMakeFiles/DNeuroMAT_autogen.dir/AutoRcc_dialog_EWIEGA46WW_Info.json RelWithDebInfo
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\vaa3d_plug\DNeuroMAT\dialog.qrc;E:\vaa3d_plug\DNeuroMAT\build\CMakeFiles\DNeuroMAT_autogen.dir\AutoRcc_dialog_EWIEGA46WW_Info.json;E:\vaa3d_plug\DNeuroMAT\src\pics\blueStone.png;E:\vaa3d_plug\DNeuroMAT\src\pics\close.png;E:\vaa3d_plug\DNeuroMAT\src\pics\close-white.png;E:\vaa3d_plug\DNeuroMAT\src\pics\grayStone.png;E:\vaa3d_plug\DNeuroMAT\src\pics\greenStone.png;E:\vaa3d_plug\DNeuroMAT\src\pics\redStone.png;E:\vaa3d_plug\DNeuroMAT\src\pics\down.png;E:\vaa3d_plug\DNeuroMAT\src\pics\minus.png;E:\vaa3d_plug\DNeuroMAT\src\pics\plus.png;E:\vaa3d_plug\DNeuroMAT\src\pics\up.png;E:\vaa3d_plug\DNeuroMAT\src\pics\down-128.png;E:\vaa3d_plug\DNeuroMAT\src\pics\file-128.png;E:\vaa3d_plug\DNeuroMAT\src\pics\standardbutton-apply-128.png;E:\vaa3d_plug\DNeuroMAT\src\pics\standardbutton-cancel-128.png;E:\vaa3d_plug\DNeuroMAT\src\pics\standardbutton-open-128.png;E:\vaa3d_plug\DNeuroMAT\src\pics\up-128.png;E:\vaa3d_plug\DNeuroMAT\src\pics\v3dIcon128.png;E:\vaa3d_plug\DNeuroMAT\src\pics\edit.png;E:\Neure\4.8.6\bin\rcc.exe;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\vaa3d_plug\DNeuroMAT\build\DNeuroMAT_autogen\EWIEGA46WW\qrc_dialog.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\vaa3d_plug\DNeuroMAT\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule E:/vaa3d_plug/DNeuroMAT/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
D:\cmake-3.24.0-rc2-windows-x86_64\bin\cmake.exe -SE:/vaa3d_plug/DNeuroMAT -BE:/vaa3d_plug/DNeuroMAT/build --check-stamp-file E:/vaa3d_plug/DNeuroMAT/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CMakeCXXInformation.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CMakeCommonLanguageInclude.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CMakeGenericSystem.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CMakeInitializeConfigs.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CMakeLanguageInformation.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CMakePushCheckState.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CMakeRCInformation.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CMakeSystemSpecificInformation.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CMakeSystemSpecificInitialize.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CheckCXXSymbolExists.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CheckSymbolExists.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\Compiler\MSVC-CXX.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\Compiler\MSVC.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\FindPackageHandleStandardArgs.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\FindPackageMessage.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\FindQt4.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\MacroAddFileDependencies.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\Platform\Windows-MSVC-CXX.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\Platform\Windows-MSVC.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\Platform\Windows.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\Platform\WindowsPaths.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\Qt4ConfigDependentSettings.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\Qt4Macros.cmake;E:\vaa3d_plug\DNeuroMAT\build\CMakeFiles\3.24.0-rc2\CMakeCXXCompiler.cmake;E:\vaa3d_plug\DNeuroMAT\build\CMakeFiles\3.24.0-rc2\CMakeRCCompiler.cmake;E:\vaa3d_plug\DNeuroMAT\build\CMakeFiles\3.24.0-rc2\CMakeSystem.cmake;E:\vaa3d_plug\DNeuroMAT\dialog.qrc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\vaa3d_plug\DNeuroMAT\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule E:/vaa3d_plug/DNeuroMAT/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
D:\cmake-3.24.0-rc2-windows-x86_64\bin\cmake.exe -SE:/vaa3d_plug/DNeuroMAT -BE:/vaa3d_plug/DNeuroMAT/build --check-stamp-file E:/vaa3d_plug/DNeuroMAT/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CMakeCXXInformation.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CMakeCommonLanguageInclude.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CMakeGenericSystem.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CMakeInitializeConfigs.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CMakeLanguageInformation.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CMakePushCheckState.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CMakeRCInformation.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CMakeSystemSpecificInformation.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CMakeSystemSpecificInitialize.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CheckCXXSymbolExists.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CheckSymbolExists.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\Compiler\MSVC-CXX.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\Compiler\MSVC.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\FindPackageHandleStandardArgs.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\FindPackageMessage.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\FindQt4.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\MacroAddFileDependencies.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\Platform\Windows-MSVC-CXX.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\Platform\Windows-MSVC.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\Platform\Windows.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\Platform\WindowsPaths.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\Qt4ConfigDependentSettings.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\Qt4Macros.cmake;E:\vaa3d_plug\DNeuroMAT\build\CMakeFiles\3.24.0-rc2\CMakeCXXCompiler.cmake;E:\vaa3d_plug\DNeuroMAT\build\CMakeFiles\3.24.0-rc2\CMakeRCCompiler.cmake;E:\vaa3d_plug\DNeuroMAT\build\CMakeFiles\3.24.0-rc2\CMakeSystem.cmake;E:\vaa3d_plug\DNeuroMAT\dialog.qrc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\vaa3d_plug\DNeuroMAT\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule E:/vaa3d_plug/DNeuroMAT/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
D:\cmake-3.24.0-rc2-windows-x86_64\bin\cmake.exe -SE:/vaa3d_plug/DNeuroMAT -BE:/vaa3d_plug/DNeuroMAT/build --check-stamp-file E:/vaa3d_plug/DNeuroMAT/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CMakeCXXInformation.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CMakeCommonLanguageInclude.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CMakeGenericSystem.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CMakeInitializeConfigs.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CMakeLanguageInformation.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CMakePushCheckState.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CMakeRCInformation.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CMakeSystemSpecificInformation.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CMakeSystemSpecificInitialize.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CheckCXXSymbolExists.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CheckSymbolExists.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\Compiler\MSVC-CXX.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\Compiler\MSVC.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\FindPackageHandleStandardArgs.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\FindPackageMessage.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\FindQt4.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\MacroAddFileDependencies.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\Platform\Windows-MSVC-CXX.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\Platform\Windows-MSVC.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\Platform\Windows.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\Platform\WindowsPaths.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\Qt4ConfigDependentSettings.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\Qt4Macros.cmake;E:\vaa3d_plug\DNeuroMAT\build\CMakeFiles\3.24.0-rc2\CMakeCXXCompiler.cmake;E:\vaa3d_plug\DNeuroMAT\build\CMakeFiles\3.24.0-rc2\CMakeRCCompiler.cmake;E:\vaa3d_plug\DNeuroMAT\build\CMakeFiles\3.24.0-rc2\CMakeSystem.cmake;E:\vaa3d_plug\DNeuroMAT\dialog.qrc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\vaa3d_plug\DNeuroMAT\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule E:/vaa3d_plug/DNeuroMAT/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
D:\cmake-3.24.0-rc2-windows-x86_64\bin\cmake.exe -SE:/vaa3d_plug/DNeuroMAT -BE:/vaa3d_plug/DNeuroMAT/build --check-stamp-file E:/vaa3d_plug/DNeuroMAT/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CMakeCXXInformation.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CMakeCommonLanguageInclude.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CMakeGenericSystem.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CMakeInitializeConfigs.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CMakeLanguageInformation.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CMakePushCheckState.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CMakeRCInformation.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CMakeSystemSpecificInformation.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CMakeSystemSpecificInitialize.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CheckCXXSymbolExists.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\CheckSymbolExists.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\Compiler\MSVC-CXX.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\Compiler\MSVC.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\FindPackageHandleStandardArgs.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\FindPackageMessage.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\FindQt4.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\MacroAddFileDependencies.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\Platform\Windows-MSVC-CXX.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\Platform\Windows-MSVC.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\Platform\Windows.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\Platform\WindowsPaths.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\Qt4ConfigDependentSettings.cmake;D:\cmake-3.24.0-rc2-windows-x86_64\share\cmake-3.24\Modules\Qt4Macros.cmake;E:\vaa3d_plug\DNeuroMAT\build\CMakeFiles\3.24.0-rc2\CMakeCXXCompiler.cmake;E:\vaa3d_plug\DNeuroMAT\build\CMakeFiles\3.24.0-rc2\CMakeRCCompiler.cmake;E:\vaa3d_plug\DNeuroMAT\build\CMakeFiles\3.24.0-rc2\CMakeSystem.cmake;E:\vaa3d_plug\DNeuroMAT\dialog.qrc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\vaa3d_plug\DNeuroMAT\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="E:\vaa3d_plug\DNeuroMAT\build\DNeuroMAT_autogen\mocs_compilation_Debug.cpp">
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="E:\vaa3d_plug\DNeuroMAT\src\cpp\auto_show_result.cpp" />
    <ClCompile Include="E:\vaa3d_plug\DNeuroMAT\src\cpp\dialog.cpp" />
    <ClCompile Include="E:\vaa3d_plug\DNeuroMAT\src\cpp\method_button.cpp" />
    <ClCompile Include="E:\vaa3d_plug\DNeuroMAT\src\cpp\neuron_analysor.cpp" />
    <ClCompile Include="E:\vaa3d_plug\DNeuroMAT\src\cpp\neuron_analysor_plugin.cpp" />
    <ClCompile Include="E:\vaa3d_plug\DNeuroMAT\src\cpp\parameter_button.cpp" />
    <ClCompile Include="E:\vaa3d_plug\DNeuroMAT\src\cpp\surf_objs.cpp" />
    <ClCompile Include="E:\Neure\v3d_external\v3d_main\basic_c_fun\v3d_message.cpp" />
    <ClCompile Include="E:\Neure\v3d_external\v3d_main\basic_c_fun\basic_surf_objs.cpp" />
    <ClCompile Include="E:\Neure\4.8.6\tools\shared\qtpropertybrowser\qtbuttonpropertybrowser.cpp" />
    <ClCompile Include="E:\Neure\4.8.6\tools\shared\qtpropertybrowser\qteditorfactory.cpp" />
    <ClCompile Include="E:\Neure\4.8.6\tools\shared\qtpropertybrowser\qtgroupboxpropertybrowser.cpp" />
    <ClCompile Include="E:\Neure\4.8.6\tools\shared\qtpropertybrowser\qtpropertybrowser.cpp" />
    <ClCompile Include="E:\Neure\4.8.6\tools\shared\qtpropertybrowser\qtpropertybrowserutils.cpp" />
    <ClCompile Include="E:\Neure\4.8.6\tools\shared\qtpropertybrowser\qtpropertymanager.cpp" />
    <ClCompile Include="E:\Neure\4.8.6\tools\shared\qtpropertybrowser\qttreepropertybrowser.cpp" />
    <ClCompile Include="E:\Neure\4.8.6\tools\shared\qtpropertybrowser\qtvariantproperty.cpp" />
    <None Include="E:\vaa3d_plug\DNeuroMAT\dialog.qrc">
    </None>
    <ClCompile Include="E:\vaa3d_plug\DNeuroMAT\build\DNeuroMAT_autogen\EWIEGA46WW\qrc_dialog.cpp" />
    <ClCompile Include="E:\vaa3d_plug\DNeuroMAT\build\DNeuroMAT_autogen\mocs_compilation_Release.cpp">
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="E:\vaa3d_plug\DNeuroMAT\build\DNeuroMAT_autogen\mocs_compilation_MinSizeRel.cpp">
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="E:\vaa3d_plug\DNeuroMAT\build\DNeuroMAT_autogen\mocs_compilation_RelWithDebInfo.cpp">
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">true</ExcludedFromBuild>
    </ClCompile>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="E:\vaa3d_plug\DNeuroMAT\build\ZERO_CHECK.proj">
      <Project>{26EB003A-B549-357B-8315-AA7153E015C8}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>